{"version":3,"sources":["components/header.js","components/uncrontrolForm.js","img/delete2.png","components/Displaylist.js","components/taskList.js","App.js","reportWebVitals.js","index.js"],"names":["header","UncontrolForm","newTask","id","newTaskRef","useRef","onSubmit","e","preventDefault","TasksData","task","current","value","length","complete","htmlFor","type","placeholder","ref","required","className","Displaylist","props","checktask","textDecoration","list","backgroundColor","style","onClick","bind","src","Delete","alt","del","taskList","map","delete","check","App","useState","todolist","setNewTask","data","newTaskList","console","log","filter","tasklist","window","confirm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAUeA,EARA,WACX,OACI,8BACI,8CC+BIC,EAlCM,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,GACzBC,EAAaC,mBAejB,OAES,uBAAMC,SAdM,SAAAC,GACjBA,EAAEC,iBAEF,IAAIC,EAAW,CACPC,KAAKN,EAAWO,QAAQC,MACxBT,GAAIA,EAAGU,OACPC,UAAU,GAEdZ,EAAQO,GACRL,EAAWO,QAAQC,MAAO,KAKzB,UAEG,uBAAOT,GAAG,YAAYY,QAAQ,UAA9B,mBACA,uBACIC,KAAK,OACLb,GAAG,OACHc,YAAY,mBACZC,IAAKd,EACLe,UAAQ,IAEX,wBAAQC,UAAU,kBAAkBJ,KAAK,SAAzC,wBC9BF,MAA0B,oC,SCoBzBK,EAhBI,SAACC,GAClB,IAAMC,EAAW,CACRC,eAAgBF,EAAMG,KAAKX,SAAY,eAAgB,OACvDY,gBAAiBJ,EAAMG,KAAKX,SAAa,cAAe,qBAEhE,OAEQ,cADA,CACA,MAAKa,MAAQJ,EAAb,UAAyBD,EAAMG,KAAKf,KACpC,gCACA,wBAAQU,UAAU,kBAAmBQ,QAAUN,EAAMC,UAAUM,KAAK,EAAMP,EAAMG,KAAKtB,IAArF,uBACA,qBAAMiB,UAAU,SAASU,IAAKC,EAAQC,IAAI,SAASJ,QAASN,EAAMW,IAAIJ,KAAK,EAAMP,EAAMG,KAAKtB,aCGzF+B,EAdE,SAACZ,GACd,OAAO,+BACK,2CAEEA,EAAMG,KAAKU,KAAI,SAAAV,GAAI,OAErB,cAAC,EAAD,CAAaA,KAAMA,EAEPQ,IAAKX,EAAMc,OACXb,UAAWD,EAAMe,OAFZZ,EAAKtB,WCyDvBmC,MA1Df,WACE,MAA+BC,mBAAS,CACtC,CACE7B,KAAM,iBACNP,GAAI,EACJW,UAAS,GAEX,CACEJ,KAAM,yBACNP,GAAI,EACJW,UAAS,GAEX,CACEJ,KAAM,eACNP,GAAI,EACJW,UAAS,KAdb,mBAAO0B,EAAP,KAAiBC,EAAjB,KA0CA,OACE,qBAAKrB,UAAU,MAAf,SACA,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAelB,QA7BJ,SAACwC,GACd,IAAMC,EAAW,sBAAOH,GAAP,CAAiBE,IAClCE,QAAQC,IAAIF,GACZF,EAAWE,IA0BwBxC,GAAIqC,IACrC,cAAC,EAAD,CAAWf,KAAMe,EAAUJ,OAXZ,SAAAjC,GAClB,IAAMwC,EAAeH,EAASM,QAAO,SAAAC,GAAQ,OAAGA,EAAS5C,KAAMA,KAC/DsC,EAAWE,IASuCN,MAvB7B,SAAAlC,GACpB,GAAG6C,OAAOC,QAAQ,wCAClB,CAAC,IAAMN,EAAcH,EAASL,KAAI,SAAAY,GAIhC,OAHGA,EAAS5C,KAAOA,IACjB4C,EAASjC,UAAYiC,EAASjC,UAEzBiC,KAETN,EAAWE,gBC/BFO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.02fbef23.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst header = () => {\r\n    return (\r\n        <div>\r\n            <h1>TODO LIST</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default header;","import React,{ useRef} from 'react'\r\n\r\nconst UncontrolForm = ({newTask, id}) => {\r\n    let newTaskRef = useRef()\r\n\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        let TasksData ={\r\n                task:newTaskRef.current.value,\r\n                id: id.length,\r\n                complete: false\r\n            };\r\n            newTask(TasksData) //Using props to pass data from uncrolledForm to app.js\r\n            newTaskRef.current.value=(' ')//Reset the input bar\r\n    }\r\n\r\n    return (\r\n    \r\n             <form onSubmit={handleSubmit}>\r\n\r\n                <label id='titleform' htmlFor=\"newTask\">Task:</label>\r\n                <input \r\n                    type='text'\r\n                    id=\"task\" \r\n                    placeholder='Enter a new task'\r\n                    ref={newTaskRef}\r\n                    required\r\n                />\r\n                 <button className=\"btn btn-primary\" type='submit'>Submit</button>\r\n                 \r\n            </form>\r\n\r\n    )\r\n}\r\nexport  default UncontrolForm;\r\n","export default __webpack_public_path__ + \"static/media/delete2.1a70538b.png\";","import React from 'react'\r\n// import Delete from './img/delete2.png'\r\nimport Delete from '../img/delete2.png'\r\n\r\nconst Displaylist = (props) => {\r\n   const checktask ={\r\n            textDecoration: props.list.complete ?  'line-through': 'none', //if the task is complete, a line will be drawn over the text\r\n            backgroundColor: props.list.complete ?   'transparent': 'rgb(255, 255, 87)' //if the task is not complete, the background of the item will be yellow. \r\n        }\r\n    return (\r\n            //Style items using an object.\r\n            <li  style ={checktask}>{props.list.task} \r\n            <div>\r\n            <button className=\"btn btn-success\"  onClick ={props.checktask.bind(this, props.list.id)} > Complete</button> \r\n            <img  className='delete' src={Delete} alt='delete' onClick={props.del.bind(this, props.list.id)}/>\r\n            </div>\r\n            </li>\r\n\r\n    )\r\n}\r\n export default Displaylist\r\n","import React from 'react'\r\nimport Displaylist from './Displaylist'\r\n\r\nconst taskList = (props) => {\r\n    return <ul> \r\n                <h4>Task List</h4>\r\n\r\n                {(props.list.map(list =>\r\n                \r\n                <Displaylist list={list}\r\n                            key={list.id} \r\n                            del={props.delete}  //Passing the deleteTask function from app.js\r\n                            checktask={props.check} //Passing the checkComplete function from app.js\r\n                />)\r\n                )}\r\n            </ul>}\r\n\r\nexport default taskList","import './App.css';\r\nimport { useState } from \"react\";\r\n//Components\r\nimport Header from './components/header';\r\nimport UncontrolForm from './components/uncrontrolForm'\r\nimport Taskslist from './components/taskList'\r\n\r\n\r\n\r\nfunction App() {\r\n  const [todolist, setNewTask] = useState([\r\n    {\r\n      task: \"Do the laundry\",\r\n      id: 0,\r\n      complete:true,\r\n    },\r\n    {\r\n      task: \"Go to the supermarkert\",\r\n      id: 1,\r\n      complete:false,\r\n    },\r\n    {\r\n      task: 'Buy cat food',\r\n      id: 2,\r\n      complete:true,\r\n    },\r\n  ]);\r\n  //Funtion to add a new task\r\n   const addTask = (data) =>{\r\n      const newTaskList = [...todolist, data]\r\n      console.log(newTaskList)\r\n      setNewTask(newTaskList)\r\n    }\r\n  \r\n    //Function to check if a task is completed or not. \r\n    const checkComplete = id => {\r\n      if(window.confirm('Are your sure you want to delete it?'))\r\n      {const newTaskList = todolist.map(tasklist =>{\r\n        if(tasklist.id === id){\r\n          tasklist.complete =! tasklist.complete\r\n        }\r\n        return tasklist\r\n      })\r\n      setNewTask(newTaskList )\r\n    }}\r\n    \r\n    //Funtion to delete a task\r\n    const deletetask = id =>{\r\n     const newTaskList =  todolist.filter(tasklist=> tasklist.id !==id) //Create a new array using the task id.\r\n     setNewTask(newTaskList)\r\n        \r\n    }\r\n  return (\r\n    <div className=\"App\">\r\n    <div className='container-lg'>\r\n      <Header/>\r\n      <div className='inner_ctn'>\r\n        <UncontrolForm newTask={addTask} id={todolist} /> \r\n        <Taskslist list={todolist} delete={deletetask} check={checkComplete}/>\r\n      </div>\r\n     </div>\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}